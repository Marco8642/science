local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
concheck = "test"
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2", true))()
local example = library:CreateWindow({
  text = "Airplane Simulator"
})
example:AddToggle("Auto Contracts", function(state)
  getfenv().contracts = (state and true or false)
  local function hascontract()
      local contract = nil
      for i,v in pairs(game:GetService("Players").LocalPlayer.Contracts:GetChildren()) do
          if v:FindFirstChild("IsSelected") and v:FindFirstChild("IsSelected").Value == true then
              contract = v
              task.wait()
          end
      end
      return contract
          end
          local function findmark()
              local check = nil
              for i,v in pairs(workspace:GetDescendants()) do
                          if v.Name == "LocationMarker" then
                              check = v
                              task.wait()
                     end
                      end
              return check
                  end
          if     game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil then
              getfenv().plane = game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent.Parent.Name
          end
          spawn(function()
          while getfenv().contracts do
              task.wait(1)
              pcall(function()
              if hascontract() == nil or findmark() == nil then
                  if game:GetService("Players").LocalPlayer.PlayerGui.Main.OnClick.Contracts.Frame.Main:FindFirstChildOfClass("Frame") then
                      firesignal(game:GetService("Players").LocalPlayer.PlayerGui.Main.OnClick.Contracts.Frame.Main:FindFirstChildOfClass("Frame").Button.Activated)
                          end
              wait(3)
              if func == nil then
              for i,v in pairs(getgc(true)) do
                  if type(v) == "function" and getfenv(v).script == game:GetService("Players").LocalPlayer.PlayerGui.Main.OnClick.Contracts.Frame.ContractsUI then
                      if getinfo(v).name == "OnMark" then
                      warn(getinfo(v).name)
                      func = v
                      v()
                      task.wait()
                      end
                  end
                  end
              elseif func ~= nil and findmark() == nil then
                  func()
              end
              end
          end)
          end
      end)
      local plr = game.Players.LocalPlayer
      local chr = plr.Character
      local car = chr.Humanoid.SeatPart.Parent
      if not workspace:FindFirstChild("justanormalpart") then
    local new = Instance.new("Part",workspace)
    new.Name = "justanormalpart"
    new.Anchored = true
    new.Size = Vector3.new(10000,10,10000)
    new.Position = chr.HumanoidRootPart.Position+Vector3.new(0,5000,0)
      end
      while getfenv().contracts do
          task.wait(0.1)
          local p,call = pcall(function()
          local plane = game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent.Parent
          if hascontract() ~= nil then
          local v = findmark()
          if v ~= nil and getfenv().contracts == true then
              task.wait()
              if v.Parent.ClassName == "Part" and game.Players.LocalPlayer:DistanceFromCharacter(v.Parent.Position) > 70 then
                  repeat task.wait()
                   if v.Parent ~= test or game.Players.LocalPlayer:DistanceFromCharacter(v.Position) < 70 or getfenv().contracts == false then
                    plane.PrimaryPart.Anchored = false
                    local test = v.Parent
                  local TweenService = game:GetService("TweenService")
                  local TweenInfoToUse = TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
                  local TweenValue = Instance.new("CFrameValue")
                  TweenValue.Value = plane:GetPrimaryPartCFrame()
                  TweenValue.Changed:Connect(function()
                  plane:SetPrimaryPartCFrame(TweenValue.Value)
                  end)
                  local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value= v.Parent.Highlight.WorldPivot})
                  OnTween:Play()
                  OnTween.Completed:Wait()
                  workspace:FindFirstChild("justanormalpart").CFrame = CFrame.new(plane.PrimaryPart.CFrame.X,v.Parent.CFrame.Y-30,plane.PrimaryPart.CFrame.Z)
                  plane.PrimaryPart.Anchored = true
                end
              until v.Parent ~= test or game.Players.LocalPlayer:DistanceFromCharacter(v.Parent.Position) < 70 or getfenv().contracts == false
              local time = tick()
              repeat task.wait()
                plane.PrimaryPart.Anchored = true
              until v.Parent ~= test or game.Players.LocalPlayer:DistanceFromCharacter(v.Parent.Position) > 70 or getfenv().contracts == false or tick()-time > 2
              plane.PrimaryPart.Anchored = false
          elseif v.ClassName ~= "Part" and game.Players.LocalPlayer:DistanceFromCharacter(v.Position) > 70 then
              repeat task.wait()
                if v.Parent ~= test or game.Players.LocalPlayer:DistanceFromCharacter(v.Position) < 70 or getfenv().contracts == false then
              local test = v.Parent
              local test = v.Parent
              plane.PrimaryPart.Anchored = false
                  local TweenService = game:GetService("TweenService")
                  local TweenInfoToUse = TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
                  local TweenValue = Instance.new("CFrameValue")
                  TweenValue.Value = plane:GetPrimaryPartCFrame()
                  TweenValue.Changed:Connect(function()
                  plane:SetPrimaryPartCFrame(TweenValue.Value)
                  end)
                  local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value= v.Parent.Highlight.WorldPivot})
                  OnTween:Play()
                  OnTween.Completed:Wait()
                  workspace:FindFirstChild("justanormalpart").CFrame = CFrame.new(plane.PrimaryPart.CFrame.X,v.CFrame.Y-30,plane.PrimaryPart.CFrame.Z)
                  plane.PrimaryPart.Anchored = true
                end
                  until v.Parent ~= test or game.Players.LocalPlayer:DistanceFromCharacter(v.Position) < 70 or getfenv().contracts == false
                  local time = tick()
                  repeat task.wait()
                    plane.PrimaryPart.Anchored = true
                  until v.Parent ~= test or game.Players.LocalPlayer:DistanceFromCharacter(v.Parent.Position) > 70 or getfenv().contracts == false or tick()-time > 2
                  plane.PrimaryPart.Anchored = false
              end
          end
        elseif hascontract() == nil then
          game:GetService("ReplicatedStorage").SpawnVehicle:FireServer(getfenv().plane, workspace.Spawners, "Original", true)
          wait(0.5)
          repeat task.wait()
          until game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil
        end
      end)
      if p == false then
        warn(p,call)
          end
        end
end)
local example = library:CreateWindow({
  text = "Credits"
})
example:AddLabel("Lego Lua",function()
end)
