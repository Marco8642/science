  local vu = game:GetService("VirtualUser")
  game:GetService("Players").LocalPlayer.Idled:connect(function()
     vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
     wait(1)
     vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
  end)
  local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2", true))()
  local example = library:CreateWindow({
    text = "Airplane simulator"
  })
  example:AddToggle("Auto Contracts", function(state)
    getfenv().contracts = (state and true or false)
    spawn(function()
        local function hascontract()
            local contract = nil
            for i,v in pairs(game:GetService("Players").LocalPlayer.Contracts:GetDescendants()) do
                if v.Name == "IsSelected" and v.Value == true then
                    contract = v
                end
            end
            return contract
                end
                local function findmark()
                    local check = nil
                    for i,v in pairs(workspace:GetDescendants()) do
                                if v.Name == "LocationMarker" then
                                    check = v
                           end
                            end
                    return check
                        end
                print(hascontract())
            while getfenv().contracts do
                task.wait()
                pcall(function()
                if hascontract() == nil and game:GetService("Players").LocalPlayer.PlayerGui.Main.OnClick.Contracts.Frame.Main:FindFirstChildOfClass("Frame") or findmark() == nil then
                    if game:GetService("Players").LocalPlayer.PlayerGui.Main.OnClick.Contracts.Frame.Main:FindFirstChildOfClass("Frame") then
                        firesignal(game:GetService("Players").LocalPlayer.PlayerGui.Main.OnClick.Contracts.Frame.Main:FindFirstChildOfClass("Frame").Button.Activated)
                            end
                wait(3)
                if func == nil then
                for i,v in pairs(getgc(true)) do
                    if type(v) == "function" and getfenv(v).script == game:GetService("Players").LocalPlayer.PlayerGui.Main.OnClick.Contracts.Frame.ContractsUI then
                        if getinfo(v).name == "OnMark" then
                        warn(getinfo(v).name)
                        func = v
                        v()
                        end
                    end
                    end
                elseif func ~= nil and findmark() == nil then
                    func()
                end
                end
            end)
            end
        end)
        workspace.Gravity = 196
        while getfenv().contracts do
            task.wait()
            pcall(function()
                workspace.Gravity = 196
            local plane = game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent.Parent
            for i,v in pairs(workspace:GetDescendants()) do
            if v.Name == "LocationMarker" and getfenv().contracts == true then
                if v.Parent.ClassName == "Part" and game.Players.LocalPlayer:DistanceFromCharacter(v.Parent.Position) > 70 then
                    workspace.Gravity = 0
                local test = v.Parent
                local TweenService = game:GetService("TweenService")
        
                local TweenInfoToUse = TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
                
                local TweenValue = Instance.new("CFrameValue")
                TweenValue.Value = plane:GetPrimaryPartCFrame()
                
                TweenValue.Changed:Connect(function()
                plane:SetPrimaryPartCFrame(TweenValue.Value)
                end)
                
                local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value= v.Parent.CFrame})
                OnTween:Play()
                OnTween.Completed:Wait()
                repeat task.wait()
                until v.Parent ~= test or game.Players.LocalPlayer:DistanceFromCharacter(v.Parent.Position) > 70 or getfenv().contracts == false
            elseif v.Parent.ClassName ~= "Part" and game.Players.LocalPlayer:DistanceFromCharacter(v.Position) > 70 then
                workspace.Gravity = 0
                    local test = v.Parent
                    local TweenService = game:GetService("TweenService")
        
                    local TweenInfoToUse = TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false, 0)
                    
                    local TweenValue = Instance.new("CFrameValue")
                    TweenValue.Value = plane:GetPrimaryPartCFrame()
                    
                    TweenValue.Changed:Connect(function()
                    plane:SetPrimaryPartCFrame(TweenValue.Value)
                    end)
                    
                    local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value= v.CFrame})
                    OnTween:Play()
                    OnTween.Completed:Wait()
                    repeat task.wait()
                    until v.Parent ~= test or game.Players.LocalPlayer:DistanceFromCharacter(v.Position) > 70 or getfenv().contracts == false
                end
            end
            end
        end)
            end
  end)
