local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
local mt = getrawmetatable(game);
setreadonly(mt,false)
local namecall = mt.__namecall

mt.__namecall = newcclosure(function(self, ...)
	local Method = getnamecallmethod()
	local Args = {...}

	if Method == 'FireServer' and self.Name == "JobRemoteHandler" and rawget(...,"Action") == "StartDeliveryJob" then
print(Args)
 _G.remotetable = ...
    end
	return namecall(self, ...) 
end)
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2", true))()
local example = library:CreateWindow({
  text = "Vehicle Dealership"
})
example:AddToggle("Auto Farm", function(state)
getfenv().auto = (state and true or false)
while getfenv().auto do
local chr = game.Players.LocalPlayer.Character
local car = chr.Humanoid.SeatPart.Parent.Parent
dist = (chr.HumanoidRootPart.Position-chr.HumanoidRootPart.Position+Vector3.new(1000,0,0)).Magnitude
local TweenService = game:GetService("TweenService")
local TweenInfoToUse = TweenInfo.new(dist/350, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, 0, true, 0)

local TweenValue = Instance.new("CFrameValue")
TweenValue.Value = car:GetPrimaryPartCFrame()
        
TweenValue.Changed:Connect(function()
car:SetPrimaryPartCFrame(TweenValue.Value)
end)
local OnTween = TweenService:Create(TweenValue, TweenInfoToUse, {Value=car.Engine.CFrame+car.Engine.CFrame.LookVector*1000})
OnTween:Play()
OnTween.Completed:Wait()
end
end)
example:AddToggle("Auto Barn Parts", function(state)
    getfenv().test = (state and true or false)
    while getfenv().test do
        wait()
    local function update()
        local count = game:GetService("Players").LocalPlayer.PlayerGui.Menu.Event.Frame.PrizeFrame.ProgressBar.Count
        local text = count.Text:split("/")
        local num = tonumber(text[1])
    return num
    end
    for i,v in pairs(workspace:GetChildren()) do
        if v.ClassName == "Model" and not v:FindFirstChild("Part") and v:FindFirstChild("Owned") and update() ~= 12 and getfenv().test == true then
            repeat wait()
        game.Players.LocalPlayer.Character:PivotTo(v.WorldPivot)
            until v:FindFirstChild("Part") or getfenv().test == false
            wait(1)
        elseif v.ClassName == "Model" and v:FindFirstChild("Part") and v:FindFirstChild("Owned") and update() ~= 12 and getfenv().test == true then
        local test = nil
        for a,b in pairs(v:GetChildren()) do
        if b.ClassName == "MeshPart" and b.Transparency < 0.5 then
            test = b
        end
        end
        if test ~= nil then
        local ohye = update()
        repeat wait(0.1)
            game.Players.LocalPlayer.Character:PivotTo(v.WorldPivot)
            game:GetService("VirtualInputManager"):SendKeyEvent(true,"E",false,game)
        until test.Transparency > 0.5 or getfenv().test == false
    repeat wait(0.1)
        game:GetService("ReplicatedStorage").Remotes.EventController.PerformAction:FireServer("AssembleCarPart", {})
    until ohye ~= update()
    end
        end
        end
    end
    end)
example:AddToggle("Auto Sell Cars",function(state)
    getfenv().Customer = (state and true or false)
    while getfenv().Customer do
        task.wait()
    pcall(function()
        local function plot()
            for i,v in pairs(workspace.Tycoons:GetDescendants()) do
            if v.Name == "Owner" and v.ClassName == "StringValue" and string.find(v.Parent.Name,"Plot") and v.Value == game.Players.LocalPlayer.Name or v.Name == "Owner" and v.ClassName == "StringValue" and string.find(v.Parent.Name,"Slot") and v.Value == game.Players.LocalPlayer.Name then
            tycoon = v.Parent
            end
            end
            return tycoon
            end
    _G.rat = nil
local customer
    for i,v in pairs(plot().Dealership:GetChildren()) do
        if v.ClassName == "Model" and v.PrimaryPart ~= nil and  v.PrimaryPart.Name == "HumanoidRootPart" then
            customer = v
        end
    end
    local text = customer:GetAttribute("OrderSpecBudget"):split(";")
    local num = tonumber(text[2])
    local plr = game.Players.LocalPlayer
    local guis = plr.PlayerGui
    local menu = guis.Menu
    local req = guis.Dialogue.CarSpec.Frame.Frame
    for i,v in pairs(menu.Shop.Cars.Frame.Frame:GetDescendants()) do
        if v.Name == "PriceValue" and tonumber(string.gsub(v.Value,",",""):split("$")[2]) > tonumber(text[1]) and tonumber(string.gsub(v.Value,",",""):split("$")[2]) < tonumber(text[2]) then
    local ok =tonumber(string.gsub(v.Value,",",""):split("$")[2])
    if ok < num then
    num = ok
    _G.rat = v
    end
    end
    end
    textn = 1
repeat wait()
text = _G.rat.Parent.Name:split("")[textn]
    textn=textn+1

    warn(text,textn)
until tonumber(text) == nil
    game:GetService("ReplicatedStorage").Remotes.DealershipCustomerController.NPCHandler:FireServer({["Action"] = "AcceptOrder",["OrderId"] = customer:GetAttribute("OrderId")})
    wait()
    game:GetService("ReplicatedStorage").Remotes.DealershipCustomerController.NPCHandler:FireServer({["Specs"] = {["Springs"] = customer:GetAttribute("OrderSpecSprings"),["Color"] = customer:GetAttribute("OrderSpecColor"),["Rims"] = customer:GetAttribute("OrderSpecRims"),["Car"] = text.._G.rat.Parent.Name:split(tostring(_G.rat.Parent.Name:split("")[textn-1]))[2],["RimColor"] = customer:GetAttribute("OrderSpecRimColor")},["Action"] = "CompleteOrder",["OrderId"] = customer:GetAttribute("OrderId")})
    wait()
    game:GetService("ReplicatedStorage").Remotes.DealershipCustomerController.NPCHandler:FireServer({["Action"] = "CollectReward",["OrderId"] = customer:GetAttribute("OrderId")})
    repeat wait()
    until customer.Parent == nil or  getfenv().Customer == false
    end)
    end
end)
example:AddToggle("Auto Delivery",function(state)
    getfenv().deliver = (state and true or false)
    spawn(function()
        while getfenv().deliver do
            task.wait()
            pcall(function()
        if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit == false then
            wait(5)
            getfenv().spawned = false
        end
        end)
        end
        end)
    while getfenv().deliver do
        wait()
        pcall(function()
    if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
        task.wait(0.1)
    for i,v in pairs(workspace.ActionTasksGames.Jobs:GetDescendants()) do
    if v.Name == "DeliveryPart" and v.Transparency ~= 1 then
        getfenv().spawned = false
        game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent.Parent:PivotTo(v.CFrame)
        game.Players.LocalPlayer.Character.Head.Anchored =true
        task.wait(0.1)
        game.Players.LocalPlayer.Character.Head.Anchored =false
        game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent.Parent:PivotTo(v.CFrame*CFrame.new(-30,0,-10))
        game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent.Parent:PivotTo(v.CFrame*CFrame.Angles(0,math.rad(90),0))
       wait(0.1)
       for i,v in pairs(game.Players.LocalPlayer.Character.Humanoid.SeatPart.Parent.Parent:GetChildren()) do
        if v.ClassName == "Model" and v:GetAttribute("StockTurbo") then
            for a,b in pairs(workspace.ActionTasksGames.Jobs:GetChildren()) do
                if b.ClassName == "Model" and b:GetAttribute("JobId") then
                    warn(b:GetAttribute("JobId"))
                    task.wait()
            game:GetService("ReplicatedStorage").Remotes.DealershipCustomerController.JobRemoteHandler:FireServer({["Action"] = "TryToCompleteJob",["JobId"] = b:GetAttribute("JobId")})
            task.wait(0.1)
            game:GetService("ReplicatedStorage").Remotes.DealershipCustomerController.JobRemoteHandler:FireServer({["JobId"] = game:GetService("Players").LocalPlayer.PlayerGui.MissionRewardStars:GetAttribute("JobId"),["Action"] = "CollectReward"})
        end
    end
        end 
    end
end
    end
    elseif game.Players.LocalPlayer.Character.Humanoid.Sit == false and getfenv().spawned ~= true then
        game:GetService("ReplicatedStorage").Remotes.DealershipCustomerController.JobRemoteHandler:FireServer(_G.remotetable)
        getfenv().spawned = true
    wait(0.1)
    end
    end)
    end
end)
example:AddToggle("Auto Upgrade Plot",function(state)
    getfenv().buyer = (state and true or false )
while getfenv().buyer do
task.wait()
-- purchase buttons
local function plot()
    for i,v in pairs(workspace.Tycoons:GetDescendants()) do
    if v.Name == "Owner" and v.ClassName == "StringValue" and v.Value == game.Players.LocalPlayer.Name then
    tycoon = v.Parent
    end
    end
    return tycoon
    end
    -- purchase buttons
    for i,v in pairs(plot().Dealership.Purchases:GetChildren()) do 
        if getfenv().buyer == true and v.TycoonButton.Button.Transparency == 0 then
    game:GetService("ReplicatedStorage").Remotes.Build:FireServer("BuyItem", v.Name)
    wait(0.3)
    end 
end   
end
end)
example:AddToggle("Annoying Popup Disabler",function(state)
    getfenv().annoy = (state and true or false )
if getfenv().annoy == true then
-- annoying popup remover
getfenv().fun =game:GetService("Players").LocalPlayer.PlayerGui.ChildAdded:Connect(function(ok)
    if ok.Name == "Popup2" then
        ok:Destroy()
    end
end)
elseif getfenv().annoy == false then
getfenv().fun:Disconnect()
end
end)
local example = library:CreateWindow({
    text = "Races"
  })
example:AddToggle("Auto Xmass Drift",function(state)
    _G.oh = (state and true or false)

    for i,v in pairs(workspace:GetDescendants()) do
        if v.Name == "DriftAsphalt" then
            v.Velocity = v.CFrame.LookVector*0
            end
        end
    
    while _G.oh do
        task.wait()
    if game:GetService("Players").LocalPlayer.PlayerGui.Menu.Race.Visible == true then
   if _G.velo ~= true then
        for i,v in pairs(workspace:GetDescendants()) do
        if v.Name == "DriftAsphalt" then
            v.Velocity = v.CFrame.LookVector*1000
            end
        end
        _G.velo = true
    end
    if game.Players.LocalPlayer:DistanceFromCharacter(Vector3.new(-2055.981689453125, 654.3567504882812, 7831.22900390625)) > 20 then
        game:GetService("Players").LocalPlayer.PlayerGui.Animation.DriftPoints.Position = UDim2.new(0.5, 0,1, -130)
        local chr = game.Players.LocalPlayer.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    car:PivotTo(CFrame.new(-2055.981689453125, 654.3567504882812, 7831.22900390625))
    end
elseif game:GetService("Players").LocalPlayer.PlayerGui.Menu.Race.Visible == false then
    local chr = game.Players.LocalPlayer.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    car:PivotTo(CFrame.new(-2068.947021484375, 656.533447265625, 7767.55810546875))
    wait(0.1)
workspace.Races.RaceHandler.StartLobby:FireServer("Xmas")
wait(1)
    end
end
    end)
