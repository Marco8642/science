local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
local library = loadstring(game:HttpGet("https://pastebin.com/raw/PpMcEF8z", true))()
local example = library:CreateWindow({
  text = "World of Stands"
})
example:AddBox("Npc Name", function(object, focus)
    if focus then
   
     _G.enemyselect = tostring(object.Text)
    end
  end)
  example:AddToggle("Auto Farm Npc's", function(state)
  _G.SelAutofarm = (state and true or false)
  while _G.SelAutofarm do
      wait()
      pcall(function()
  for a,b in pairs(game:GetService("Workspace"):GetChildren()) do
      if b.Name == _G.enemyselect  and b:FindFirstChild("HumanoidRootPart") then
  repeat wait()
      game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=b.HumanoidRootPart.CFrame*CFrame.new(0,0,5)
      task.wait()
      b.HumanoidRootPart.Anchored = true
  require(game:GetService("ReplicatedStorage").Network):FireServer("TryPunch")
  until b.Humanoid.Health == 0 or _G.Autofarm == false
  b.HumanoidRootPart.Anchored = false
  end
  end
  end)
  end
end)
example:AddToggle("Auto Farm All Npc's", function(state)
_G.Autofarm = (state and true or false)
while _G.Autofarm do
    wait()
    pcall(function()
for a,b in pairs(game:GetService("Workspace"):GetDescendants()) do
    if b.Name == "HumanoidRootPart" and not b.Parent:FindFirstChild("PlayerHeader")  and b.Parent.Parent.Name ~= "InteractiveNPC" and  b.Parent.Humanoid.MaxHealth < 999999  and b.Parent.Name ~= game.Players.LocalPlayer.Name then
repeat wait()
    b.Anchored = true
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=b.CFrame*CFrame.new(0,0,3)
require(game:GetService("ReplicatedStorage").Network):FireServer("TryPunch")
until b.Parent.Humanoid.Health == 0 or _G.Autofarm == false
end
end
end)
end
end)
example:AddToggle("Auto Collect Collectables", function(state)
_G.loot = (state and true or false)
while _G.loot do
    wait()
for i,v in pairs(workspace:GetDescendants()) do
    if v.Name == "Part" and v:FindFirstChild("TouchInterest") and v.Parent.Parent == workspace  then
        wait()
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v,0)
firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v,1)
end
end
end
end)
example:AddToggle("Auto Quest Farm", function(state)
    _G.quest = (state and true or false)
    while _G.quest do
        wait()
        pcall(function()
        for c,d in pairs(game:GetService("Players").LocalPlayer.PlayerGui.BaseGui:GetDescendants()) do
            if d.Name == "ValueLabel" and d.Text ~= "Completed!" then
                wait()
        local test=d.Text:split("/")
    local test2 = test[1]:split(":")
    for a,b in pairs(game:GetService("Workspace"):GetChildren()) do
        if b.Name == test2[1]  then
    if _G.busy ~= true then
        _G.busy2 = true
    repeat wait()
        b.HumanoidRootPart.Anchored = true
 game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=b.HumanoidRootPart.CFrame*CFrame.new(0,0,3)
    require(game:GetService("ReplicatedStorage").Network):FireServer("TryPunch")
    until b.Humanoid.Health == 0 or _G.quest == false or d.Text == "" or _G.busy == true
    _G.busy2 = false
    end
    end
    end
    end
    end
    end)
    end
end)
example:AddToggle("Auto Use Skills", function(state)
_G.useskills = (state and true or false)
while _G.useskills do
    task.wait()
if not game:GetService("Players").LocalPlayer.PlayerGui.BaseGui.Overlay.BarFrame.ActionFrame.Attack1:FindFirstChild("Attack1") then
    require(game:GetService("ReplicatedStorage").Network):FireServer("TryAttack","Attack1")
wait(1)
elseif not game:GetService("Players").LocalPlayer.PlayerGui.BaseGui.Overlay.BarFrame.ActionFrame.Attack2:FindFirstChild("Attack2") then
    require(game:GetService("ReplicatedStorage").Network):FireServer("TryAttack","Attack2")
wait(1)
elseif not game:GetService("Players").LocalPlayer.PlayerGui.BaseGui.Overlay.BarFrame.ActionFrame.Attack3:FindFirstChild("Attack3") then
    require(game:GetService("ReplicatedStorage").Network):FireServer("TryAttack","Attack3")
    wait(1)
    end
end
end)
spawn(function()
    while wait() do
    if _G.useskills == true then
        pcall(function()
    if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Model") then
    for i,v in pairs(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Model"):GetDescendants()) do
        if v.Name == "BladeWeld" and v.Enabled == true then
        wait()
        require(game:GetService("ReplicatedStorage").Network):FireServer("StandSummon")
        elseif v.Name == "Head" and v.Transparency == 1 then
            wait()
        require(game:GetService("ReplicatedStorage").Network):FireServer("StandSummon")
    end
    end
    end
    end)
    end
    end
    end)
spawn(function()
while wait() do
    if _G.quest == true then
pcall(function()
for i,v in pairs(game:GetService("Workspace").Terrain:GetDescendants()) do
    if v.Name == "Marker" then
for a,b in pairs(workspace:GetDescendants()) do
    if b.Name == "HumanoidRootPart" and b.Parent:FindFirstChild("Humanoid") and not b.Parent:FindFirstChild("PlayerHeader")  and b.Parent.Parent.Name ~= "InteractiveNPC" and  b.Parent.Humanoid.MaxHealth ~= 1000000 and (b.Position-v.Parent.Position).Magnitude < 50 then
   if _G.busy2 ~= true then
       _G.busy = true
   repeat wait()
       b.Anchored = true
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=b.CFrame*CFrame.new(0,0,3)
require(game:GetService("ReplicatedStorage").Network):FireServer("TryPunch")
until b.Parent.Humanoid.Health == 0 or _G.quest == false or _G.busy2 == true
_G.busy = false
end
end
end
end
end
end)
end
end
end)
spawn(function()
    while wait() do
if _G.quest == true then
    pcall(function()
        for i,v in pairs(game:GetService("Workspace").InteractiveNPC:GetDescendants()) do
            if v.Name == "ID" and v.Parent.Name ~= "Bounty Master" then
        task.wait()
        require(game:GetService("ReplicatedStorage").Network):FireServer("OnPromptActivated",v.Value)
        task.wait()
        require(game:GetService("ReplicatedStorage").Network):InvokeServer("NPCInteract",v.Value)
        game:GetService("Players").LocalPlayer.PlayerGui.BaseGui.TextLabel:Destroy()
        end
        end
        wait(10)
    end)    
    end
    end
end)
