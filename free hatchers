local mt = getrawmetatable(game);
setreadonly(mt,false)
local namecall = mt.__namecall

mt.__namecall = newcclosure(function(self, ...)
	local Method = getnamecallmethod()
	local Args = {...}

	if Method == 'FireServer' and self.Name == 'Rebirth' then
_G.savedrebirth = Args[1]
	end
	return namecall(self, ...) 
end)
_G.gravity = workspace.Gravity
_G.walkspeed = game.Players.LocalPlayer.Character.Humanoid.WalkSpeed
_G.jumppower = game.Players.LocalPlayer.Character.Humanoid.JumpPower
local library = loadstring(game:HttpGet("https://pastebin.com/raw/PpMcEF8z", true))()
local example = library:CreateWindow({
  text = "Free Hatchers"
})
example:AddToggle("Auto Collect Coins", function(state)
_G.coins = (state and true or false)
while _G.coins do
    wait()
    pcall(function()
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
    if v.ClassName == "MeshPart" and v:FindFirstChild("TouchInterest") then
            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v,1)
    task.wait()
    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v,0)
    end
end
end)
end
end)
example:AddToggle("Auto Collect AirDrops", function(state)
_G.coinss = (state and true or false)
while _G.coinss do
    wait()
    pcall(function()
for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
    if v.ClassName == "Model" and v:FindFirstChild("Hit") then
            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v.Hit,1)
    task.wait()
    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v.Hit,0)
    end
end
end)
end
end)
example:AddToggle("Auto Rebirth", function(state)
_G.rebirth = (state and true or false)
while _G.rebirth do
    wait()
    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("AlertUI") then
        game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("AlertUI"):Destroy()
    else
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(_G.savedrebirth)
end
end
end)
example:AddToggle("Auto Claim Chests", function(state)
    _G.chest = (state and true or false)
    while _G.chest do
        wait()
    pcall(function()
    if game:GetService("Players").LocalPlayer.PlayerGui.NewUI:FindFirstChild("Prompt") then
        game:GetService("Players").LocalPlayer.PlayerGui.NewUI:FindFirstChild("Prompt"):Destroy()
        else
    for i,v in pairs(game:GetService("Workspace").ChestCircles:GetDescendants()) do
        if v.Name == "Touch" and v:FindFirstChild("TouchInterest") then
                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v,1)
        wait()
        firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart,v,0)
        end
    end
    wait(10)
    end
    end)
    end
    
end)
local example = library:CreateWindow({
    text = "Eggs"
  })
example:AddBox("Egg Name", function(object, focus)
    if focus then
   
        _G.egg = tostring(object.Text)
    end
end)
    example:AddToggle("Auto Open eggs", function(state)
_G.eggopen = (state and true or false)
while _G.eggopen do
wait()
game:GetService("ReplicatedStorage").GameClient.Events.RemoteFunction.BuyEgg:InvokeServer(_G.egg, "Buy1")
end
end)
example:AddToggle("Triple Open eggs", function(state)
    _G.eggopen = (state and true or false)
    while _G.eggopen do
    wait()
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteFunction.BuyEgg:InvokeServer(_G.egg, "Buy3")
    end
    end)
    example:AddToggle("Octuple Open eggs", function(state)
        _G.eggopen = (state and true or false)
        while _G.eggopen do
        wait()
        game:GetService("ReplicatedStorage").GameClient.Events.RemoteFunction.BuyEgg:InvokeServer(_G.egg, "Buy8")
        end
        end)
local example = library:CreateWindow({
    text = "Pets"
})
example:AddToggle("Auto Equipt Best Pets", function(state)
_G.best = (state and true or false)
while _G.best do
    wait(0.1)
game:GetService("ReplicatedStorage").Marchy.PetRemotes.Generic.EquipBest:FireServer()
end        
end)
example:AddToggle("Auto Craft All Pets", function(state)
    _G.best2 = (state and true or false)
    while _G.best2 do
game:GetService("ReplicatedStorage").Marchy.PetRemotes.Generic.CraftAll:FireServer()
wait(0.5)
    end        
end)
example:AddToggle("Auto Delete Common", function(state)
    _G.common = (state and true or false)
    while _G.common do
        wait()
        pcall(function()
    for i,v in pairs(require(game:GetService("ReplicatedStorage").GameClient.Modules.Utilities.PetStats)) do
    if v.Rarity == "Common" then
    for a,b in pairs(game:GetService("Players").LocalPlayer.Pets:GetChildren()) do
        if b.ClassName == "Folder" and b._Name.Value == i then
    game:GetService("ReplicatedStorage").Marchy.PetRemotes.Specific.Delete:FireServer(b.Name)
      task.wait()
        end
    end
    task.wait()
        end
    end
end)
    end
    end)
 
    example:AddToggle("Auto Delete Rare", function(state)
    _G.rare = (state and true or false)
    while _G.rare do
        wait()
        pcall(function()
    for i,v in pairs(require(game:GetService("ReplicatedStorage").GameClient.Modules.Utilities.PetStats)) do
    if v.Rarity == "Rare" then
    for a,b in pairs(game:GetService("Players").LocalPlayer.Pets:GetChildren()) do
        if b.ClassName == "Folder" and b._Name.Value == i then
    game:GetService("ReplicatedStorage").Marchy.PetRemotes.Specific.Delete:FireServer(b.Name)
      task.wait()
        end
    end
    task.wait()
        end
    end
end)
    end
    end)

    example:AddToggle("Auto Delete Epic", function(state)
    _G.epic = (state and true or false)
    while _G.epic do
        wait()
        pcall(function()
    for i,v in pairs(require(game:GetService("ReplicatedStorage").GameClient.Modules.Utilities.PetStats)) do
    if v.Rarity == "Epic" then
    for a,b in pairs(game:GetService("Players").LocalPlayer.Pets:GetChildren()) do
        if b.ClassName == "Folder" and b._Name.Value == i then
    game:GetService("ReplicatedStorage").Marchy.PetRemotes.Specific.Delete:FireServer(b.Name)
      task.wait()
        end
    end
    task.wait()
        end
    end
end)
    end
    end)
   
    example:AddToggle("Auto Delete Legendary", function(state)
    _G.legend = (state and true or false)
    while _G.legend do
        wait()
        pcall(function()
    for i,v in pairs(require(game:GetService("ReplicatedStorage").GameClient.Modules.Utilities.PetStats)) do
    if v.Rarity == "Legendary" then
    for a,b in pairs(game:GetService("Players").LocalPlayer.Pets:GetChildren()) do
        if b.ClassName == "Folder" and b._Name.Value == i then
    game:GetService("ReplicatedStorage").Marchy.PetRemotes.Specific.Delete:FireServer(b.Name)
      task.wait()
        end
    end
    task.wait()
        end
    end
end)
    end
    end)

    example:AddToggle("Auto Delete Limited", function(state)
    _G.limited = (state and true or false)
    while _G.limited do
        wait()
        pcall(function()
    for i,v in pairs(require(game:GetService("ReplicatedStorage").GameClient.Modules.Utilities.PetStats)) do
    if v.Rarity == "Limited" then
    for a,b in pairs(game:GetService("Players").LocalPlayer.Pets:GetChildren()) do
        if b.ClassName == "Folder" and b._Name.Value == i then
    game:GetService("ReplicatedStorage").Marchy.PetRemotes.Specific.Delete:FireServer(b.Name)
      task.wait()
        end
    end
    task.wait()
        end
    end
end)
    end
    end)
    local example = library:CreateWindow({
        text = "Upgrades"
      })
      example:AddToggle("Auto Upgrade WalkSpeed", function(state)
        _G.walkup = (state and true or false)
        while _G.walkup do
            wait(0.1)
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent["Upgrade Controller"]:FireServer("WalkSpeed2")
    end
    end)
      example:AddToggle("Auto Upgrade Coin Multi", function(state)
        _G.coinmulti = (state and true or false)
        while _G.coinmulti do
            wait(0.1)
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent["Upgrade Controller"]:FireServer("CoinMultiplier3")
    end
    end)
      example:AddToggle("Auto Upgrade HatchSpeed", function(state)
        _G.hspeed = (state and true or false)
        while _G.hspeed do
            wait(0.1)
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent["Upgrade Controller"]:FireServer("HatchSpeed2")
    end
    end)
      example:AddToggle("Auto Upgrade Luck", function(state)
        _G.luck = (state and true or false)
        while _G.luck do
            wait(0.1)
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent["Upgrade Controller"]:FireServer("Luck3")
    end
    end)
      example:AddToggle("Auto Upgrade Rebirth", function(state)
        _G.reup = (state and true or false)
        while _G.reup do
            wait(0.1)
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent["Upgrade Controller"]:FireServer("Rebirth2")
    end
    end)
      example:AddToggle("Auto Upgrade Exp", function(state)
        _G.exps = (state and true or false)
        while _G.exps do
            wait()
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent["Upgrade Controller"]:FireServer("EXP")
    end
    end)
      example:AddToggle("Auto Upgrade Pet Slot", function(state)
        _G.petslot = (state and true or false)
        while _G.petslot do
            wait()
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent["Upgrade Controller"]:FireServer("PercentPetEquipped")
    end
    end)
      example:AddToggle("Auto Upgrade Inventory slot", function(state)
        _G.invs = (state and true or false)
        while _G.invs do
            wait()
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent["Upgrade Controller"]:FireServer("InventorySlot")
    end
    end)
      example:AddToggle("Auto Upgrade Gem Multi", function(state)
        _G.gemm = (state and true or false)
        while _G.gemm do
            wait()
    game:GetService("ReplicatedStorage").GameClient.Events.RemoteEvent["Upgrade Controller"]:FireServer("GemMultiplier")
    end
    end)
    
    spawn(function()
    print("test")
while wait() do
    pcall(function()
if _G.egg ~= nil and _G.eggopen then
    wait()
for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.NewUI.EggUI:GetChildren()) do
    if string.find(v.Name,_G.egg) and v.Enabled == false then
   game.Players.LocalPlayer.Character:MoveTo(game:GetService("Workspace").Eggs[v.Name].Sign.Position)
   wait()
    end
end
end
end)
end
end)
local example = library:CreateWindow({
    text = "Teleports"
  })
  example:AddBox("World Name", function(object, focus)
    if focus then
   
    local world = tostring(object.Text)
for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.NewUI.TeleportFrame.Worlds:GetChildren()) do
    if v.ClassName == "Frame" and string.find(v.Description.Text,world) then
game.Players.LocalPlayer.Character:PivotTo(game.Workspace:FindFirstChild(v.Name .. "TP").CFrame)
end
end
end
end)
example:AddToggle("Click Teleport", function(state)
    _G.clickteleport = (state and true or false)
if _G.clickteleport == true then
    local plr = game.Players.LocalPlayer
    local Mouse = plr:GetMouse()
    _G.run=Mouse.Button1Down:Connect(function()
    game.Players.LocalPlayer.Character:MoveTo(Mouse.Hit.Position)
    end)
    elseif _G.clickteleport == false then
    _G.run:Disconnect()
    end
end)
local example = library:CreateWindow({
    text = "Misc"
  })
  example:AddBox("Gravity", function(object, focus)
    if focus then
    local gravity = tostring(object.Text)
    workspace.Gravity = gravity
    end
end)
example:AddButton("Reset Gravity", function()
workspace.Gravity = _G.gravity
end)
 example:AddBox("WalkSpeed", function(object, focus)
        if focus then
        local speed = tostring(object.Text)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed =speed
        end
    end)
    example:AddButton("Reset WalkSpeed", function()
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = _G.walkspeed
        end)
    example:AddBox("JumpPower", function(object, focus)
        if focus then
        local speed = tostring(object.Text)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower =speed
        end
    end)
    example:AddButton("Reset JumpPower", function()
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = _G.jumppower
        end)
