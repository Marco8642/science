warn("Anti afk running")
game:GetService("Players").LocalPlayer.Idled:connect(function()
warn("Anti afk ran")
game:GetService("VirtualUser"):CaptureController()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
local mt = getrawmetatable(game);
setreadonly(mt,false)
local namecall = mt.__namecall
mt.__namecall = newcclosure(function(self, ...)
	local Method = getnamecallmethod()
    local chr = game.Players.LocalPlayer.Character
	if Method == 'TakeDamage' and self:IsDescendantOf(chr) and getfenv().godmode == true  then
return;
	end
	return namecall(self, ...) 
end)
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2", true))()
local example = library:CreateWindow({
  text = "Pet Catchers"
})
example:AddLabel("Minimum Star Pets", function()
end)
example:AddBox("Enter Pet Stars", function(object, focus)
    if focus then
   getfenv().stars1 = tonumber(object.Text)
    end
end)
example:AddLabel("Cube Type To Catch Pets", function()
end)
example:AddDropdown({"Select Cube Type","Common","Rare","Epic","Legendary"},function(state) 
    if state ~= "Catch Cube Type" then
 getfenv().catchcube  = state
    end
end)
example:AddToggle("God Mode", function(state)
getfenv().godmode = (state and true or false)
while getfenv().godmode do
    wait()
local p,call = pcall(function()
for i,v in pairs(workspace.Rendered.Enemies:GetDescendants()) do
if v.Name == "TouchInterest" then
    v:Destroy()
    task.wait()
end
end
end)
if p == false then
    warn(p,call)
end
end
end)
example:AddToggle("Auto Catch Pets", function(state)
getfenv().catch = (state and true or false)
while getfenv().catch do
    task.wait()
    local function getstars(pet)
        local stars = 0
        for i,v in pairs(pet:GetDescendants()) do
            if v.Name == "Stars" then
            for a,b in pairs(v:GetChildren()) do
        if b.ClassName == "ImageLabel" and b.Visible == true then
            stars = stars+1
        end
    end
        end
        end
        return stars
        end
        local p,call =pcall(function()
    for i,v in pairs(workspace.Rendered.Pets.World:GetChildren()) do
    if v.ClassName == "Model" and getstars(v) >= getfenv().stars1 then
            task.spawn(function()
        game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Function:InvokeServer("CapturePet", v.Name, getfenv().catchcube)
        end)
    task.wait()
    end
    end
end)
if p == false then
warn(p,call)
end
    end
end)
example:AddLabel("          Legendary Pet Stuff", function(state)
end)
example:AddToggle("Auto Best Cube", function(state)
getfenv().catchlegend = (state and true or false)
while getfenv().catchlegend do
wait()
local function getstars(pet)
    local stars = 0
    for i,v in pairs(pet:GetDescendants()) do
        if v.Name == "Stars" then
        for a,b in pairs(v:GetChildren()) do
    if b.ClassName == "ImageLabel" and b.Visible == true then
        stars = stars+1
    end
end
    end
    end
    return stars
    end
    local cube = nil
    local inventory = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Inventory
    for i,v in pairs(inventory.Frame.Main.Content.Items.List["Important Things"].Grid.Content:GetChildren()) do
     if v.ClassName == "Frame" and v:GetAttribute("ItemType") == "Cube" and v.Name == "Legendary" then
    cube = v
    task.wait()
     end
    end
    if cube == nil then
        for i,v in pairs(inventory.Frame.Main.Content.Items.List["Important Things"].Grid.Content:GetChildren()) do
            if v.ClassName == "Frame" and v:GetAttribute("ItemType") == "Cube" and v.Name == "Epic" then
           cube = v
           task.wait()
            end
           end
        end
        if cube == nil then
            for i,v in pairs(inventory.Frame.Main.Content.Items.List["Important Things"].Grid.Content:GetChildren()) do
                if v.ClassName == "Frame" and v:GetAttribute("ItemType") == "Cube" and v.Name == "Rare" then
               cube = v
               task.wait()
                end
               end
            end
    local p,call =pcall(function()
        for i,v in pairs(workspace.Rendered.Pets.World:GetChildren()) do
        if v.ClassName == "Model" and getstars(v) >= 4 then
            task.spawn(function()
                if cube ~= nil then
                game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Function:InvokeServer("CapturePet", v.Name, cube.Name)
                elseif cube == nil then
                    game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Function:InvokeServer("CapturePet", v.Name, "Common")
                end
        task.wait()
            end)
        end
        end
    end)
    if p == false then
    warn(p,call)
    end
end
end)
example:AddToggle("Auto tp to legendary Pet", function(state)
    getfenv().catch1 = (state and true or false)
    while getfenv().catch1 do
        task.wait()
        local function getstars(pet)
            local stars = 0
            for i,v in pairs(pet:GetDescendants()) do
                if v.Name == "Stars" then
                for a,b in pairs(v:GetChildren()) do
            if b.ClassName == "ImageLabel" and b.Visible == true then
                stars = stars+1
            end
        end
            end
            end
            return stars
            end
            local p,call =pcall(function()
                local function getmaps1()
                    local map = {}
                for i,v in pairs(workspace.Map:GetChildren()) do
                if v.ClassName == "Folder" then
                table.insert(map,v.Name)
                end
                end
                return map
                end
                local map = nil
                for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Notification:GetDescendants()) do
                    if v.ClassName == "TextLabel" and string.find(v.Text,"Legendary")  then
                    local test = v.Text:split("spawned in")
                    local test2 = test[2]:split("!")
                    local remove = string.gsub(tostring(test2[1]),tostring(test2[1]:split(">")[1]),"")
                    print(remove)
                    local remove2 = string.gsub(tostring(remove),tostring(test2[1]:split("<")[2]),"")
                    local remove3 = string.gsub(tostring(remove2),"<","")
                    local remove4 = string.gsub(tostring(remove3),">","")
                    local remove5 = string.gsub(tostring(remove4),"/font","")
                warn(remove5)
                map = remove5
                end
                end
                if map ~= nil then
                    print("teleported to pet")
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=workspace.Map[map].Spawn.CFrame+Vector3.new(0,10,0)
                end
    end)
    if p == false then
    warn(p,call)
    end
        end
    end)
local example = library:CreateWindow({
    text = "Fishing"
  })
  local function getmaps()
    local map = {"Select Area To Fish"}
for i,v in pairs(workspace.Map:GetDescendants()) do
if string.find(v.Name,"Foam") and v.ClassName == "Part" and v.Parent.Parent.Parent.Parent == workspace.Map and not table.find(map,v.Parent.Parent.Parent.Name) then
table.insert(map,v.Parent.Parent.Parent.Name)
end
end
return map
end
example:AddDropdown(getmaps(),function(state) 
    if state ~= "Select Area To Fish" then
        _G.rat = nil
local distance = math.huge
for a,b in pairs(workspace.Map[state]:GetDescendants()) do
    if b.ClassName == "Part" and workspace:Raycast(b.Position, Vector3.new(0, 10, 0)) == nil and b.Name == "Foam" then
local Dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - b.Position).magnitude
if Dist < distance then
distance = Dist
_G.rat = b
end
end
end
print(state,_G.rat)
getfenv().mapselected = state
    end
end)
example:AddButton ("Tp to Fishing Location", function(state)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = _G.rat.CFrame+Vector3.new(0,10,0)
end)
example:AddToggle("Auto Fish", function(state)
    getfenv().fish = (state and true or false)
    while getfenv().fish do
game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Event:FireServer("StartCastFishing")
repeat task.wait()
until game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Fishing.Progress.Visible == true or getfenv().fish == false
repeat task.wait()
until game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Fishing.Progress.Visible == false or getfenv().fish == false
    end
end)
local example = library:CreateWindow({
    text = "Pets"
  })
  example:AddLabel("Egg Opener", function()
  end)
  example:AddDropdown({"Select Egg To Open","Mystery Egg","Elite Mystery Egg","Prismatic Mystery Egg"},function(state) 
    if state ~= "Select Egg To Open" then
        getfenv().egg = state
    end
end)
example:AddToggle("Auto Open Eggs", function(state)
    getfenv().eggopen = (state and true or false)
    while getfenv().eggopen do
        task.spawn(function()
game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Function:InvokeServer("TryHatchEgg", egg)
        end)
        task.wait()
    end
end)
  example:AddLabel("Delete Pets", function()
  end)
  example:AddBox("Enter Star Value", function(object, focus)
    if focus then
   getfenv().stars = tonumber(object.Text)
    end
end)
  example:AddToggle("Auto Delete", function(state)
    getfenv().del = (state and true or false)
    local func 
for i,v in pairs(getgc(true)) do
    if type(v) == "function" and getinfo(v).name ~= nil and getfenv(v).script == game:GetService("ReplicatedStorage").Client.Gui.Frames.Inventory then
        if getinfo(v).name == "updateTray" then
        print(getinfo(v).name)
        func = v
    end
end
end
    while getfenv().del do
local function getstars(pet)
local stars = 0
for i,v in pairs(pet:GetChildren()) do
if v.ClassName == "ImageLabel" and v.Visible == true then
    stars = stars+1
end
end
return stars
end
func()
local delete = {}
local inventory =game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Inventory.Frame.Main.Content.Pets.Grid.Content
for i,v in pairs(inventory:GetChildren()) do
if v.ClassName == "Frame" and getstars(v.Button.Stars) <= getfenv().stars then
    print(v)
table.insert(delete,v.Name)
end
end
game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Event:FireServer("MultiDelete", delete)
wait(5)

end
end)
local example = library:CreateWindow({
    text = "Enemies"
  })
  example:AddLabel("Boss Config", function()
  end)
  example:AddBox("Enter SuperCharge number", function(object, focus)
      if focus then
        getfenv().supercharge = tonumber(object.Text)
      end
  end)
  example:AddLabel("Select Boss To Farm", function()
  end)
  local function getbosses()
    local boss = {"All Bosses"}
    for i,v in pairs(workspace.Bosses:GetChildren()) do
        if v.ClassName == "Model" then
            table.insert(boss,v.Name)
        end
    end
    return boss
    end
    example:AddDropdown(getbosses(),function(state) 
    if state == "All Bosses" then
    getfenv().boss = nil
    elseif state ~= "All Bosses" then
        getfenv().boss = state
    end
    end)
    example:AddToggle("Auto Boss Farm", function(state)
    getfenv().bossfight = (state and true or false)
    local location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
    while getfenv().bossfight do
    wait()
    if getfenv().boss ~= nil and workspace.Bosses:FindFirstChild(getfenv().boss).Display.SurfaceGui.BossDisplay.Cooldown.Visible == false then
    game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Function:InvokeServer("BossRequest", getfenv().boss, getfenv().supercharge)
    wait(5)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(location)
    repeat wait()
    until workspace.Bosses:FindFirstChild(getfenv().boss).Display.SurfaceGui.BossDisplay.Cooldown.Visible == true
    elseif getfenv().boss == nil  then
        for i,v in pairs(workspace.Bosses:GetDescendants()) do
        if v.Name == "Cooldown" and v.Visible == false then
            print(v.Parent.Parent.Parent.Parent.Name)
            game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Function:InvokeServer("BossRequest", v.Parent.Parent.Parent.Parent.Name, getfenv().supercharge)
    wait(5)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(location)
    repeat wait()
    until v.Visible == true
    end
    end
        end
    end
end)
local example = library:CreateWindow({
    text = "Teleports"
  })
  local function getmaps1()
    local map = {"Select Area To Teleport"}
for i,v in pairs(workspace.Map:GetChildren()) do
if v.ClassName == "Folder" then
table.insert(map,v.Name)
end
end
return map
end
example:AddDropdown(getmaps1(),function(state) 
    if state ~= "Select Area To Teleport" then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=workspace.Map[state].Spawn.CFrame+Vector3.new(0,10,0)
    end
end)
