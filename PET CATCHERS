warn("Anti afk running")
game:GetService("Players").LocalPlayer.Idled:connect(function()
warn("Anti afk ran")
game:GetService("VirtualUser"):CaptureController()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2", true))()
local example = library:CreateWindow({
  text = "Pet Catchers"
})
example:AddLabel("Minimum Star Pets", function()
end)
example:AddBox("Enter Pet Stars", function(object, focus)
    if focus then
   getfenv().stars1 = tonumber(object.Text)
    end
end)
example:AddLabel("Cube Type To Catch Pets", function()
end)
example:AddDropdown({"Select Cube Type","Common","Rare","Epic","Legendary"},function(state) 
    if state ~= "Catch Cube Type" then
 getfenv().catchcube  = state
    end
end)
example:AddToggle("Auto Catch Pets", function(state)
getfenv().catch = (state and true or false)
while getfenv().catch do
    task.wait()
    local function getstars(pet)
        local stars = 0
        for i,v in pairs(pet:GetDescendants()) do
            if v.Name == "Stars" then
            for a,b in pairs(v:GetChildren()) do
        if b.ClassName == "ImageLabel" and b.Visible == true then
            stars = stars+1
        end
    end
        end
        end
        return stars
        end
        local p,call =pcall(function()
    for i,v in pairs(workspace.Rendered.Pets.World:GetChildren()) do
    if v.ClassName == "Model" and getstars(v) >= getfenv().stars1 then
            task.spawn(function()
        game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Function:InvokeServer("CapturePet", v.Name, getfenv().catchcube)
        end)
    task.wait()
    end
    end
end)
if p == false then
warn(p,call)
end
    end
end)
local example = library:CreateWindow({
    text = "Fishing"
  })
  local function getmaps()
    local map = {"Select Area To Fish"}
for i,v in pairs(workspace.Map:GetDescendants()) do
if string.find(v.Name,"pond") and v.ClassName == "Model" and v.Parent.Parent.Parent == workspace.Map and not table.find(map,v.Parent.Parent.Name) or string.find(v.Name,"Pond") and v.ClassName == "Model" and v.Parent.Parent.Parent == workspace.Map and not table.find(map,v.Parent.Parent.Name) then
table.insert(map,v.Parent.Parent.Name)
end
end
return map
end
example:AddDropdown(getmaps(),function(state) 
    if state ~= "Select Area To Fish" then
        _G.rat = nil
local distance = math.huge
for a,b in pairs(workspace.Map[state]:GetDescendants()) do
    if b.ClassName == "Part" and workspace:Raycast(b.Position, Vector3.new(0, 50, 0)) == nil and string.find(b.Parent.Name,"pond") then
local Dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - b.Position).magnitude
if Dist < distance then
distance = Dist
_G.rat = b
end
end
end
print(state)
getfenv().mapselected = state
    end
end)
example:AddButton ("Tp to Fishing Location", function(state)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = _G.rat.CFrame+Vector3.new(0,10,0)
end)
example:AddToggle("Auto Fish", function(state)
    getfenv().fish = (state and true or false)
    while getfenv().fish do
game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Event:FireServer("StartCastFishing")
repeat task.wait()
until game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Fishing.Progress.Visible == true or getfenv().fish == false
repeat task.wait()
until game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Fishing.Progress.Visible == false or getfenv().fish == false
    end
end)
local example = library:CreateWindow({
    text = "Pets"
  })
  example:AddLabel("Egg Opener", function()
  end)
  example:AddDropdown({"Select Egg To Open","Mystery Egg","Rare","Elite Mystery Egg","Prismatic Mystery Egg"},function(state) 
    if state ~= "Select Egg To Open" then
        getfenv().egg = state
    end
end)
example:AddToggle("Auto Open Eggs", function(state)
    getfenv().eggopen = (state and true or false)
    while getfenv().eggopen do
wait()
game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Function:InvokeServer("TryHatchEgg", egg)
    end
end)
  example:AddLabel("Delete Pets", function()
  end)
  example:AddBox("Enter Star Value", function(object, focus)
    if focus then
   getfenv().stars = tonumber(object.Text)
    end
end)
  example:AddToggle("Auto Delete", function(state)
    getfenv().del = (state and true or false)
    while getfenv().del do
local function getstars(pet)
local stars = 0
for i,v in pairs(pet:GetChildren()) do
if v.ClassName == "ImageLabel" and v.Visible == true then
    stars = stars+1
end
end
return stars
end

local inventory =game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Inventory.Frame.Main.Content.Pets.Grid.Content
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Inventory.Visible = true
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Inventory.Visible = false
local delete = {}
for i,v in pairs(inventory:GetChildren()) do
if v.ClassName == "Frame" and getstars(v.Button.Stars) <= getfenv().stars then
    print(v)
table.insert(delete,v.Name)
end
end
game:GetService("ReplicatedStorage").Shared.Framework.Network.Remote.Event:FireServer("MultiDelete", delete)
wait(5)

end
end)
local example = library:CreateWindow({
    text = "Teleports"
  })
  local function getmaps1()
    local map = {"Select Area To Teleport"}
for i,v in pairs(workspace.Map:GetChildren()) do
if v.ClassName == "Folder" then
table.insert(map,v.Name)
end
end
return map
end
example:AddDropdown(getmaps1(),function(state) 
    if state ~= "Select Area To Teleport" then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame=workspace.Map[state].Spawn.CFrame+Vector3.new(0,10,0)
    end
end)
