

warn("Anti afk running")
game:GetService("Players").LocalPlayer.Idled:connect(function()
warn("Anti afk ran")
game:GetService("VirtualUser"):CaptureController()
game:GetService("VirtualUser"):ClickButton2(Vector2.new())
end)
getfenv().grav = workspace.Gravity
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Marco8642/science/main/ui%20libs2"))()
local example = library:CreateWindow({
  text = "TradeLands"
})
example:AddToggle("Auto Mine Ore", function(state)
    getfenv().ore = (state and true or false)
local num = 1
while getfenv().ore do
    wait()
    if not game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then
        game:GetService("Players").LocalPlayer.InputAction:Fire("Slot"..tostring(num))
        wait(2)
    end
    if num > 3 then
        local emptyslot = nil
game:GetService("ReplicatedStorage").RemoteFunctionz.Gear.Equip:FireServer(false, 1, "empty", 0, 0)
        wait(3)
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.GameGui.Hotbar:GetChildren()) do
        if v.ClassName == "Frame"  and string.find(v.Name,"Slot_") then
           local test = string.gsub(v.Name,"Slot_","")
        if tonumber(test) <= 3 and v:FindFirstChild("ImageButton").Image == "" then
            emptyslot = v
            for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.GameGui.Inventory.ScrollingFrame:GetChildren()) do
                if string.find(v.Name,"Pickaxe") then
                    game:GetService("ReplicatedStorage").RemoteFunctionz.Items.InventorySwap:FireServer(tonumber(test), {[1] = v.Name,[2] =  v.Amount.Value,[3] =v.Wood.Value,[4] =v.Metal.Value,[5] = 1})
                    break
                end
                end
            print(v.Name)
        end
        end
        end
    if emptyslot == nil then
        local slot = 1
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.GameGui.Inventory.ScrollingFrame:GetChildren()) do
    if string.find(v.Name,"Pickaxe") then
        game:GetService("ReplicatedStorage").RemoteFunctionz.Items.InventorySwap:FireServer(slot, {[1] = v.Name,[2] =  v.Amount.Value,[3] =v.Wood.Value,[4] =v.Metal.Value,[5] = 1})
        break
    end
    end
    end
    num = 0
    wait(2)
    end
    if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and string.find(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").ItemName.Value,"Pickaxe") then
        _G.rat = nil
        local distance = math.huge
        for i,v in pairs(workspace.OreNodes:GetDescendants()) do
        if v.Name == "OreNode" and v:FindFirstChild("Broken") and v:FindFirstChild("Broken").Value == false then
            local Dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
            if Dist < distance then
            distance = Dist
            _G.rat = v
            end
            end
        end
        local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - _G.rat.Position).magnitude
        local CFrameEnd = _G.rat.CFrame*CFrame.new(0,0,4)
       local Time = dist/300 -- Time in seconds
       local tween =  game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(Time), {CFrame = CFrameEnd})
       tween:Play()
       tween.Completed:Wait()
        repeat wait()
            pcall(function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = _G.rat.CFrame*CFrame.new(0,0,3)
            game.Players.LocalPlayer.Character.ActiveGear.ToolScript.Swing:FireServer("left")
            end)
            until _G.rat:FindFirstChild("Broken").Value == true or not game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") or  getfenv().ore == false
    elseif game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") and not string.find(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").ItemName.Value,"Pickaxe") then
        num=num+1
        game:GetService("Players").LocalPlayer.InputAction:Fire("Slot"..tostring(num))
        wait(2)
    end
    end
end)
example:AddToggle("Auto Chop Trees", function(state)
getfenv().trees = (state and true or false)
local num = 1
while getfenv().trees do
    wait()
if not game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then
    game:GetService("Players").LocalPlayer.InputAction:Fire("Slot"..tostring(num))
    wait(2)
end
if num > 3 then
    local emptyslot = nil
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.GameGui.Hotbar:GetChildren()) do
    if v.ClassName == "Frame"  and string.find(v.Name,"Slot_") then
       local test = string.gsub(v.Name,"Slot_","")
    if tonumber(test) <= 3 and v:FindFirstChild("ImageButton").Image == "" then
        emptyslot = v
        for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.GameGui.Inventory.ScrollingFrame:GetChildren()) do
            if string.find(v.Name,"Axe") then
                game:GetService("ReplicatedStorage").RemoteFunctionz.Items.InventorySwap:FireServer(tonumber(test), {[1] = v.Name,[2] =  v.Amount.Value,[3] =v.Wood.Value,[4] =v.Metal.Value,[5] = 1})
                break
            end
            end        print(v.Name)
    end
    end
    end
if emptyslot == nil then
    local slot = 1
for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.GameGui.Inventory.ScrollingFrame:GetChildren()) do
if string.find(v.Name,"Axe") then
    game:GetService("ReplicatedStorage").RemoteFunctionz.Items.InventorySwap:FireServer(slot, {[1] = v.Name,[2] = v.Amount.Value,[3] =v.Wood.Value,[4] =v.Metal.Value,[5] = 1})
    break
end
end
end
num = 0
wait(2)
end
if string.find(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").ItemName.Value,"Axe") and not string.find(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").ItemName.Value,"Pick") then
    _G.rat = nil
    local distance = math.huge
    for i,v in pairs(workspace.Trees:GetDescendants()) do
    if v.Name == "Trunk" and v:FindFirstChild("Broken") and v:FindFirstChild("Broken").Value == false then
        local Dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Position).magnitude
        if Dist < distance then
        distance = Dist
        _G.rat = v
        end
        end
    end
    local dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - _G.rat.Position).magnitude
    local CFrameEnd = _G.rat.CFrame*CFrame.new(0,0,3)
   local Time = dist/300 -- Time in seconds
   local tween =  game:GetService("TweenService"):Create(game.Players.LocalPlayer.Character.HumanoidRootPart, TweenInfo.new(Time), {CFrame = CFrameEnd})
   tween:Play()
   tween.Completed:Wait()
    repeat wait(0.5)
        pcall(function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = _G.rat.CFrame*CFrame.new(0,0,3)
        game.Players.LocalPlayer.Character.ActiveGear.ToolScript.Swing:FireServer("left")
        end)
        until _G.rat:FindFirstChild("Broken").Value == true or not game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") or getfenv().trees == false
else
    num=num+1
    game:GetService("Players").LocalPlayer.InputAction:Fire("Slot"..tostring(num))
    wait(2)
end
end
end)
